services:
  db:
    image: postgres:17
    container_name: database_encar
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    networks:
      - local_network
    volumes:
      - postgres_data_encar:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - local_network
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD} --save 60 1
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bot_encar
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TWO_CAPTCHA_KEY=${TWO_CAPTCHA_KEY}
      - ADMIN_IDS=${ADMIN_IDS}
      - LOG_CHAT_ID=${LOG_CHAT_ID}
      - STATEMENT_CHAT_ID=${STATEMENT_CHAT_ID}
      - STATISTICS_CHAT_ID=${STATISTICS_CHAT_ID}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - local_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

networks:
  local_network:
    driver: bridge

volumes:
  postgres_data_encar:
  redis_data: